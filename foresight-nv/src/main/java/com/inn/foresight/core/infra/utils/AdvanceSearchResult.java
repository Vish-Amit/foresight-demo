package com.inn.foresight.core.infra.utils;

import java.util.List;

import javax.xml.bind.annotation.XmlRootElement;

/**
 * Represents the container for the results of advance search. This container also keeps meta data information about the
 * limits used for pagination. Any other information specific to results shall be placed in this.
 *
 * @author Auto Generated By HeadStart
 * @version 1.0
 *
 * @param <Entity> represents the Entity type
 */
@XmlRootElement(name = "result")
public class AdvanceSearchResult<Entity> {

    /** The Constant leftBrace. */
    public static final String leftBrace = "{";

    /** The Constant rightBrace. */
    public static final String rightBrace = "}";

    /**
     * represents the upper limit on the number of records fetched.
     */
    private int upperBound;
    /**
     * represents the lower limit on the number of records fetched.
     */
    private int lowerBound;
    /**
     * represents the total records found for the given query.
     */
    private int totalRecords;
    /**
     * represents the list of actual records fetched from the persistence store.
     */
    private List<Entity> results;

    /**
     * Gets the upper bound.
     *
     * @return returns the upper limit on the number of records fetched.
     */
    public int getUpperBound() {
        return upperBound;
    }

    /**
     * sets the the upper limit on the number of records fetched.
     *
     * @param upperBound the new upper bound
     */
    public void setUpperBound(int upperBound) {
        this.upperBound = upperBound;
    }

    /**
     * Gets the lower bound.
     *
     * @return returns the lower limit on the number of records fetched.
     */
    public int getLowerBound() {
        return lowerBound;
    }

    /**
     * sets the lower limit on the number of records fetched.
     *
     * @param lowerBound the new lower bound
     */
    public void setLowerBound(int lowerBound) {
        this.lowerBound = lowerBound;
    }

    /**
     * Gets the total records.
     *
     * @return returns the total records found for the given query.
     */
    public int getTotalRecords() {
        return totalRecords;
    }

    /**
     * sets the total records found for the given query.
     *
     * @param totalRecords the new total records
     */
    public void setTotalRecords(int totalRecords) {
        this.totalRecords = totalRecords;
    }

    /**
     * Gets the results.
     *
     * @return returns the list of actual records fetched from the persistence store.
     */
    public List<Entity> getResults() {
        return results;
    }

    /**
     * sets the list of actual records fetched from the persistence store.
     *
     * @param results the new results
     */
    public void setResults(List<Entity> results) {
        this.results = results;
    }

    /**
     * To string.
     *
     * @return the string
     */
    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append(leftBrace).append("UpperBound:").append(getUpperBound()).append(",LowerBound:")
                .append(getLowerBound()).append(",TotalRecords:").append(getTotalRecords()).append(",Result:")
                .append(getResults()).append(rightBrace);
        return builder.toString();
    }
}
